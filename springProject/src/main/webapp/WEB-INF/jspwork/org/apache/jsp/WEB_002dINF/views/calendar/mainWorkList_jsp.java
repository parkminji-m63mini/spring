/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-09-17 07:18:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.calendar;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mainWorkList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1597740090132L));
    _jspx_dependants.put("jar:file:/C:/Users/user1/git/AM/AM/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>메인 근무 스케줄</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/calendar.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js\" type=\"text/javascript\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- 배너 -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.3/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t#work-title{border-bottom: 3px solid #F5F4F0;}\r\n");
      out.write("\t#notice{float: right; padding-top : 10px;}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("body {margin:0;}\r\n");
      out.write(" #wrap {margin:0 auto;text-align:center;}\r\n");
      out.write(" #quick_bg {margin:0 auto;text-align:center;width:1400px;position:relative;}\r\n");
      out.write(" #quick {position:absolute;z-index:2;top:15px;width:153px;right:0px;}\r\n");
      out.write(" #containert {position:relative;}\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write(" .one1{\r\n");
      out.write(" \t    background-color: bisque;\r\n");
      out.write(" \t        border-radius: 14px;\r\n");
      out.write(" \t        padding: 10px;\r\n");
      out.write(" \t        border: 2px solid lightgray;\r\n");
      out.write(" }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t <div id=\"wrap\">\r\n");
      out.write("\t<div id=\"containert\">\r\n");
      out.write("\t\t<div id=\"quick_bg\">\r\n");
      out.write("\t\t\t<div id=\"quick\">\r\n");
      out.write("\t\t\t<a href=\"#form\" style=\"position:fixed;margin-top:-350px\"><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/images/배너.jpg\" style=\"width:200px\"></a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- ------------------------- main ---------------------------- -->\r\n");
      out.write("\t<section class=\"ftco-section\">\r\n");
      out.write("\t\t<div class=\"overlay\"></div>\r\n");
      out.write("\t\t<div class=\"container one1\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"row justify-content-center pb-5 \">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-7 heading-section text-center fadeInUp\" id=\"work-title\">\r\n");
      out.write("\t\t\t\t\t<span class=\"subheading\">Work Schedule</span>\r\n");
      out.write("\t\t\t\t\t<h2>근무 스케줄</h2>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"row justify-content-center \">\r\n");
      out.write("\t\t\t\t<div class=\"col-md-10\">\r\n");
      out.write("\t\t\t\t\t<div class=\"wrapper px-md-4\">\r\n");
      out.write("\t\t\t\t\t\t<div id='calendar'></div>\r\n");
      out.write("\t\t\t\t\t\t\t<h6 id=\"notice\">*스케쥴 변경은 근무관리에서 가능합니다.</h6>\r\n");
      out.write("\t\t\t\t\t\t<div style='clear: both'></div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<hr>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t\t<section class=\"ftco-section\">\r\n");
      out.write("    \t<div class=\"container\">\r\n");
      out.write("    \t\t<div class=\"row justify-content-center pb-5\">\r\n");
      out.write("          <div class=\"col-md-7 heading-section text-center fadeInUp\">\r\n");
      out.write("          \t<span class=\"subheading\">Services</span>\r\n");
      out.write("            <h2>FOR EMPLOYER</h2>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    \t\t<div class=\"row\">\r\n");
      out.write("    \t\t\t<div class=\"col-md-4 d-flex align-items-stretch\">\r\n");
      out.write("    \t\t\t\t<div class=\"services-2 text-center\">\r\n");
      out.write("    \t\t\t\t\t<div class=\"icon-wrap\">\r\n");
      out.write("    \t\t\t\t\t\t<div class=\"number d-flex align-items-center justify-content-center\"><span>01</span></div>\r\n");
      out.write("\t    \t\t\t\t\t<div class=\"icon d-flex align-items-center justify-content-center select1\">\r\n");
      out.write("\t    \t\t\t\t\t\t<span class=\"flaticon-employee\"></span>\r\n");
      out.write("\t    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t<h2 class=\"main-title\">인사 관리</h2>\r\n");
      out.write("    \t\t\t\t\t<p class=\"main-text\">알바생 정보를<br>더 효율적으로 관리</p>\r\n");
      out.write("    \t\t\t\t</div>\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t\t<div class=\"col-md-4 d-flex align-items-stretch\">\r\n");
      out.write("    \t\t\t\t<div class=\"services-2 text-center\">\r\n");
      out.write("    \t\t\t\t\t<div class=\"icon-wrap\">\r\n");
      out.write("    \t\t\t\t\t\t<div class=\"number d-flex align-items-center justify-content-center\"><span>02</span></div>\r\n");
      out.write("\t    \t\t\t\t\t<div class=\"icon d-flex align-items-center justify-content-center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<span class=\"flaticon-calendar\"></span>\r\n");
      out.write("\t    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t<h2  class=\"main-title\">근무 관리</h2>\r\n");
      out.write("  \t\t\t\t\t\t<p class=\"main-text\">근무 스케줄러로<br>확인, 관리를 바로바로</p>\r\n");
      out.write("    \t\t\t\t</div>\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t\t<div class=\"col-md-4 d-flex align-items-stretch\">\r\n");
      out.write("    \t\t\t\t<div class=\"services-2 text-center\">\r\n");
      out.write("    \t\t\t\t\t<div class=\"icon-wrap\">\r\n");
      out.write("    \t\t\t\t\t\t<div class=\"number d-flex align-items-center justify-content-center\"><span>03</span></div>\r\n");
      out.write("\t    \t\t\t\t\t<div class=\"icon d-flex align-items-center justify-content-center\">\r\n");
      out.write("\t    \t\t\t\t\t\t<span class=\"flaticon-checklist\"></span>\r\n");
      out.write("\t    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t</div>\r\n");
      out.write("    \t\t\t\t\t<h2  class=\"main-title\">급여 관리</h2>\r\n");
      out.write("  \t\t\t\t\t\t<p class=\"main-text\">복잡한 급여 계산을<br>쉽고 편하게</p>\r\n");
      out.write("    \t\t\t\t</div>\r\n");
      out.write("    \t\t\t</div>\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("    \t</div>\r\n");
      out.write("    </section>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/calendar.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("    var date = new Date();\r\n");
      out.write("    var d = date.getDate();\r\n");
      out.write("    var m = date.getMonth();\r\n");
      out.write("    var y = date.getFullYear();\r\n");
      out.write("    /*  className colors\r\n");
      out.write("    \r\n");
      out.write("    className: default(transparent), important(red), chill(pink), success(green), info(blue)\r\n");
      out.write("    \r\n");
      out.write("    */\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    /* initialize the external events\r\n");
      out.write("    -----------------------------------------------------------------*/\r\n");
      out.write("    $('#external-events div.external-event').each(function() {\r\n");
      out.write("      // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)\r\n");
      out.write("      // it doesn't need to have a start or end\r\n");
      out.write("      var eventObject = {\r\n");
      out.write("        title: $.trim($(this).text()) // use the element's text as the event title\r\n");
      out.write("      };\r\n");
      out.write("      // store the Event Object in the DOM element so we can get to it later\r\n");
      out.write("      $(this).data('eventObject', eventObject);\r\n");
      out.write("      // make the event draggable using jQuery UI\r\n");
      out.write("      $(this).draggable({\r\n");
      out.write("        zIndex: 999,\r\n");
      out.write("        revert: true, // will cause the event to go back to its\r\n");
      out.write("        revertDuration: 0 //  original position after the drag\r\n");
      out.write("      });\r\n");
      out.write("    });\r\n");
      out.write("    /* initialize the calendar\r\n");
      out.write("    -----------------------------------------------------------------*/\r\n");
      out.write("    // 사장 따로, 알바따로 적용할 수 있게 만들 수 있지 않을까,,?\r\n");
      out.write(" \r\n");
      out.write(" var calList = [];      \r\n");
      out.write(" \r\n");
      out.write(" if(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberGrade== 'R'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("){\r\n");
      out.write("     // 아이디가 사장님일 때\r\n");
      out.write("     console.log(\"m이다\");\r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("   // 캘린더 값 얻어오는 ajax \r\n");
      out.write("    // 동기로 해서 순서대로 읽을 수 있도록 만들고\r\n");
      out.write("    // 객체배열이니까 배열 변수 선언하고 그 안에 each 돌린 값 넣기\r\n");
      out.write("    // + month가 0-11 이여서 -1 \r\n");
      out.write("       $.ajax({\r\n");
      out.write("          url : \"calendar/master/calendarView/\",\r\n");
      out.write("          dataType : \"JSON\",\r\n");
      out.write("          async : false,\r\n");
      out.write("          success : function(list){\r\n");
      out.write("             console.log(list);\r\n");
      out.write("             $.each(list, function(i){\r\n");
      out.write("                var year = list[i].workDay.toString().substring(0,4);\r\n");
      out.write("                var month = list[i].workDay.toString().substring(5,7) - 1;\r\n");
      out.write("                var day = list[i].workDay.toString().substring(8,10);\r\n");
      out.write("                var name = list[i].memberName;\r\n");
      out.write("                var startTime = list[i].workStart;\r\n");
      out.write("                var endTime = list[i].workEnd;\r\n");
      out.write("             \r\n");
      out.write("                /* id: 999,\r\n");
      out.write("                      title: '리아',\r\n");
      out.write("                      start: new Date(y, m, 22, 16, 0),\r\n");
      out.write("                      end : new Date(y, m, 22, 16, 0)\r\n");
      out.write("                      allDay: false,\r\n");
      out.write("                      className: 'info'*/\r\n");
      out.write("                var start = new Date(year, month, day, startTime, 0);\r\n");
      out.write("                var end = new Date(year, month, day, endTime, 0);\r\n");
      out.write("                //var obj = {\"year\" : year, \"month\" : month, \"day\" : day, \"name\" : name, \"startTime\" : startTime, \"endtTime\" : endtTime };\r\n");
      out.write("                var obj = {\"title\" : name ,\"start\" : start, \"end\" : end, \"allDay\" : false};\r\n");
      out.write("                console.log(obj);\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                calList.push(obj);\r\n");
      out.write("               });\r\n");
      out.write("             \r\n");
      out.write("          }, error : function(){\r\n");
      out.write("             console.log(\"ajax 통신 실패\");\r\n");
      out.write("          }\r\n");
      out.write("       });\r\n");
      out.write("  }else{\r\n");
      out.write("     // 아이디가 알바생일 때\r\n");
      out.write("     console.log(\"a이다\");\r\n");
      out.write("     \r\n");
      out.write("     \r\n");
      out.write("   // 캘린더 값 얻어오는 ajax \r\n");
      out.write("    // 동기로 해서 순서대로 읽을 수 있도록 만들고\r\n");
      out.write("    // 객체배열이니까 배열 변수 선언하고 그 안에 each 돌린 값 넣기\r\n");
      out.write("    // + month가 0-11 이여서 -1 \r\n");
      out.write("       $.ajax({\r\n");
      out.write("          url : \"calendar/staff/calendarView/\",\r\n");
      out.write("          dataType : \"JSON\",\r\n");
      out.write("          async : false,\r\n");
      out.write("          success : function(list){\r\n");
      out.write("             console.log(list);\r\n");
      out.write("             $.each(list, function(i){\r\n");
      out.write("                var year = list[i].workDay.toString().substring(0,4);\r\n");
      out.write("                var month = list[i].workDay.toString().substring(5,7) - 1;\r\n");
      out.write("                var day = list[i].workDay.toString().substring(8,10);\r\n");
      out.write("                var name = list[i].memberName;\r\n");
      out.write("                var startTime = list[i].workStart;\r\n");
      out.write("                var endTime = list[i].workEnd;\r\n");
      out.write("             \r\n");
      out.write("                /* id: 999,\r\n");
      out.write("                      title: '리아',\r\n");
      out.write("                      start: new Date(y, m, 22, 16, 0),\r\n");
      out.write("                      end : new Date(y, m, 22, 16, 0)\r\n");
      out.write("                      allDay: false,\r\n");
      out.write("                      className: 'info'*/\r\n");
      out.write("                var start = new Date(year, month, day, startTime, 0);\r\n");
      out.write("                var end = new Date(year, month, day, endTime, 0);\r\n");
      out.write("                //var obj = {\"year\" : year, \"month\" : month, \"day\" : day, \"name\" : name, \"startTime\" : startTime, \"endtTime\" : endtTime };\r\n");
      out.write("                var obj = {\"title\" : name ,\"start\" : start, \"end\" : end, \"allDay\" : false};\r\n");
      out.write("                console.log(obj);\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                calList.push(obj);\r\n");
      out.write("               });\r\n");
      out.write("             \r\n");
      out.write("          }, error : function(){\r\n");
      out.write("             console.log(\"ajax 통신 실패\");\r\n");
      out.write("          }\r\n");
      out.write("       });\r\n");
      out.write("  }\r\n");
      out.write("    \r\n");
      out.write(" \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    $(function(){ \r\n");
      out.write("       // Ajax success 에 넣으면 될듯\r\n");
      out.write("       var calendar = $('#calendar').fullCalendar({\r\n");
      out.write("         header: {\r\n");
      out.write("           left: 'title',\r\n");
      out.write("           center: 'agendaDay,agendaWeek,month',\r\n");
      out.write("           right: 'prev,next today'\r\n");
      out.write("         },\r\n");
      out.write("         editable: true,\r\n");
      out.write("         firstDay: 1, //  1(Monday) this can be changed to 0(Sunday) for the USA system\r\n");
      out.write("         selectable: true,\r\n");
      out.write("         defaultView: 'month',\r\n");
      out.write("         axisFormat: 'h:mm',\r\n");
      out.write("         columnFormat: {\r\n");
      out.write("           month: 'ddd', // Mon\r\n");
      out.write("           week: 'ddd d', // Mon 7\r\n");
      out.write("           day: 'dddd M/d', // Monday 9/7\r\n");
      out.write("           agendaDay: 'dddd d'\r\n");
      out.write("         },\r\n");
      out.write("         titleFormat: {\r\n");
      out.write("           month: 'yyyy MMMM', // September 2009\r\n");
      out.write("           week: \"MMMM yyyy\", // September 2009\r\n");
      out.write("           day: 'MMMM yyyy' // Tuesday, Sep 8, 2009\r\n");
      out.write("         },\r\n");
      out.write("         allDaySlot: false,\r\n");
      out.write("         selectHelper: true,\r\n");
      out.write("        timeFormat : \"H : mm\",\r\n");
      out.write("         droppable: true, // this allows things to be dropped onto the calendar !!!\r\n");
      out.write("         drop: function(date, allDay) { // this function is called when something is dropped\r\n");
      out.write("           // retrieve the dropped element's stored Event Object\r\n");
      out.write("           var originalEventObject = $(this).data('eventObject');\r\n");
      out.write("           // we need to copy it, so that multiple events don't have a reference to the same object\r\n");
      out.write("           var copiedEventObject = $.extend({}, originalEventObject);\r\n");
      out.write("           // assign it the date that was reported\r\n");
      out.write("           copiedEventObject.start = date;\r\n");
      out.write("           copiedEventObject.allDay = allDay;\r\n");
      out.write("           // render the event on the calendar\r\n");
      out.write("           // the last `true` argument determines if the event \"sticks\" (http://arshaw.com/fullcalendar/docs/event_rendering/renderEvent/)\r\n");
      out.write("           $('#calendar').fullCalendar('renderEvent', copiedEventObject, true);\r\n");
      out.write("           // is the \"remove after drop\" checkbox checked?\r\n");
      out.write("           if ($('#drop-remove').is(':checked')) {\r\n");
      out.write("             // if so, remove the element from the \"Draggable Events\" list\r\n");
      out.write("             $(this).remove();\r\n");
      out.write("           }\r\n");
      out.write("         },\r\n");
      out.write("         events: calList \r\n");
      out.write("         /*\r\n");
      out.write("           {\r\n");
      out.write("             title: 'Birthday Party',\r\n");
      out.write("             start: new Date(y, m, 14, 19, 0),\r\n");
      out.write("             end: new Date(y, m, 14, 22, 30),\r\n");
      out.write("             allDay: false,\r\n");
      out.write("           },\r\n");
      out.write("           {\r\n");
      out.write("             title: 'Click for Google',\r\n");
      out.write("             start: new Date(y, m, 28),\r\n");
      out.write("             end: new Date(y, m, 29),\r\n");
      out.write("             url: 'https://google.com',\r\n");
      out.write("             className: 'success'\r\n");
      out.write("           }\r\n");
      out.write("         ]*/\r\n");
      out.write("       });\r\n");
      out.write("     });\r\n");
      out.write("  });\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t//배너\r\n");
      out.write("    var quick_menu = $('#quick');\r\n");
      out.write("    var quick_top = 470;\r\n");
      out.write("\r\n");
      out.write("    quick_menu.css('top', $(window).height() );\r\n");
      out.write("    $(document).ready(function(){\r\n");
      out.write("    quick_menu.animate( { \"top\": $(document).scrollTop() + quick_top +\"px\" }, 200 ); \r\n");
      out.write("    $(window).scroll(function(){\r\n");
      out.write("    quick_menu.stop();\r\n");
      out.write("    quick_menu.animate( { \"top\": $(document).scrollTop() + quick_top + \"px\" }, 500 );\r\n");
      out.write("    });\r\n");
      out.write("    });\r\n");
      out.write("  \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\t// 클릭이벤트\r\n");
      out.write("\t$(\".select1\").on(\"click\", function(){\r\n");
      out.write("\t\tconsole.log(\"dfdsfds\");\r\n");
      out.write("\t\tlocation.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/personnel/personnelList\";\r\n");
      out.write("\t});\r\n");
      out.write("    \r\n");
      out.write("</script>\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
